{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2NAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAoB9C,OACO,0BAAMC,SAZQ,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,+DAEDG,MAAOD,GAFN,cAEbE,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAMO,EAAIG,OAAOC,iBAAiBX,QATvB,kBAaZK,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAC/B,OACI,yBAAKa,UAAU,iDACX,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BoB,KAAO,GACPa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAU,WAENvB,EAASC,GACJuB,MAAK,SAAAC,GAEFC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAIZ,CAAEnB,IAGEoB,EDnByBM,CAAc1B,GAAjCY,EAHsB,EAG3BN,KAAaa,EAHc,EAGdA,QAErB,OACI,oCACI,gCAAMnB,EAAN,KAEEmB,GAAW,yBAAKJ,UAAU,0DAE5B,yBAAKA,UAAU,aACNH,EAAOJ,KAAI,SAAEC,GACV,OACI,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UElBvBmB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,mBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEQ4C,EAAWrB,KAAI,SAACR,GAAD,OACX,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAWA,UCdvC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.57cc901d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats ])\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n           <form onSubmit={ handleSubmit } >\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            \r\n\r\n           </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n        setCategories : PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=NiySVe5RFchUiVaomwswiuUHyy70r8jv`;\r\n    const res = await fetch( url );\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport '../index.css'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeftBig\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from '../components/GifGridItem'\r\n\r\nimport '../index.css'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //Custom Hook hace el trabajo pesado, se encarga de la l√≥gica y de llamar la APi ademas de retrazar en 3 segundos la carga para usar por ejemplo una animacion spinner.\r\n    const { data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            { loading && <div className=\"lds-dual-ring animate__animated animate__bounceInLeft\"></div> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {images.map(( img ) => {\r\n                        return(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    })}\r\n            </div>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then(imgs => {\r\n                \r\n                setTimeout( ()=> {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                }, 3000 );\r\n\r\n            });\r\n\r\n    }, [ category ] );\r\n\r\n\r\n    return state; //data:[], loading:true\r\n}","import React,{useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['rick and morty'])\r\n\r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                { \r\n                    categories.map((category) => ( \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n     );\r\n}\r\n \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}